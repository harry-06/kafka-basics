[2018-09-16 05:49:37,465] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2018-09-16 05:49:37,469] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2018-09-16 05:49:37,470] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2018-09-16 05:49:37,483] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2018-09-16 05:49:37,484] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2018-09-16 05:49:37,485] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2018-09-16 05:49:37,485] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2018-09-16 05:49:37,515] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2018-09-16 05:49:37,541] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2018-09-16 05:49:37,542] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2018-09-16 05:49:37,543] INFO [Controller id=0] Initialized controller epoch to 4 and zk version 3 (kafka.controller.KafkaController)
[2018-09-16 05:49:37,543] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2018-09-16 05:49:37,547] INFO [Controller id=0] Epoch incremented to 5 (kafka.controller.KafkaController)
[2018-09-16 05:49:37,548] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2018-09-16 05:49:37,550] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2018-09-16 05:49:37,551] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2018-09-16 05:49:37,552] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2018-09-16 05:49:37,555] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2018-09-16 05:49:37,557] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2018-09-16 05:49:37,565] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2018-09-16 05:49:37,566] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2018-09-16 05:49:37,566] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2018-09-16 05:49:37,566] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2018-09-16 05:49:37,566] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2018-09-16 05:49:37,566] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2018-09-16 05:49:37,567] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2018-09-16 05:49:37,567] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2018-09-16 05:49:37,567] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2018-09-16 05:49:37,567] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2018-09-16 05:49:37,568] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2018-09-16 05:49:37,568] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2018-09-16 05:49:37,569] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2018-09-16 05:49:37,569] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2018-09-16 05:49:37,569] INFO [RequestSendThread controllerId=0] Controller 0 connected to 192.168.1.79:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2018-09-16 05:49:37,569] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2018-09-16 05:49:37,569] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2018-09-16 05:49:37,569] INFO [Controller id=0] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2018-09-16 05:49:37,569] INFO [Controller id=0] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2018-09-16 05:49:37,569] INFO [Controller id=0] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2018-09-16 05:49:37,582] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2018-09-16 05:49:37,582] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2018-09-16 05:49:37,582] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2018-09-16 05:49:37,582] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2018-09-16 05:49:37,582] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2018-09-16 05:49:37,586] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2018-09-16 05:49:42,590] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-09-16 05:49:42,592] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
